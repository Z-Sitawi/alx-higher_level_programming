# 0-add_integer.txt

===========================
How to Use 0-add_integer.py
===========================
This module defines a function that adds 2 integers
raises TypeError: if a or b are not integers or float

b = 98 by default

Instantiation
=============
``add_integer`` can be instantiated with one argument.

A single argument
::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> print(type(add_integer(0)))
    <class 'int'>
    >>> print(add_integer(0))
    98
    >>> print(add_integer(2))
    100
    >>> print(add_integer(-2))
    96
    >>> print(add_integer(2) + add_integer(0))
    198

two arguments
::
    >>> print(add_integer(2, 12))
    14
    >>> print(add_integer(2.5, -14))
    -12
    >>> print(add_integer(-2, -5))
    -7
    >>> print(add_integer(-2.5, -5.2))
    -7

No argument
::
    >>> print(add_integer())
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

One of the arguments is not int or float
::
    >>> print(add_integer("zak", -5))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer("zak", "king"))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> print(add_integer(5, "s"))
    Traceback (most recent call last):
    TypeError: b must be an integer

