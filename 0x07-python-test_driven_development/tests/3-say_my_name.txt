# 3-say_my_name.txt

===========================
How to Use 3-say_my_name.py
===========================
This module defines a function that prints My name is <first name> <last name>
raises TypeError: if first_name and last_name are not strings

Instantiation
=============
``say_my_name`` can be instantiated with one argument, which will be
considered a first name. Or by two arguments representing first and
last name.

A single argument
::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("zak")
    My name is zak 

Tow arguments
::
    >>> say_my_name("zak", "king")
    My name is zak king

No argument
::
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

First argument not str
::
    >>> say_my_name(13)
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(13, "zak")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(13, "")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Second argument not str
::
    >>> say_my_name("zak", 13)
    Traceback (most recent call last):
    TypeError: last_name must be a string

    >>> say_my_name("", 13)
    Traceback (most recent call last):
    TypeError: last_name must be a string

    >>> say_my_name("zak", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string

both arguments are not str
::
    >>> say_my_name(14, 13)
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(None, 13)
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name(None, None)
    Traceback (most recent call last):
    TypeError: first_name must be a string
